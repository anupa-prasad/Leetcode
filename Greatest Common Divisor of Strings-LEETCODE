/*
For two strings s and t, we say "t divides s" if and only if s = t + ... + t (i.e., t is concatenated with itself one or more times).

Given two strings str1 and str2, return the largest string x such that x divides both str1 and str2.

 

Example 1:

Input: str1 = "ABCABC", str2 = "ABC"
Output: "ABC"
Example 2:

Input: str1 = "ABABAB", str2 = "ABAB"
Output: "AB"
Example 3:

Input: str1 = "LEET", str2 = "CODE"
Output: ""
 

Constraints:

1 <= str1.length, str2.length <= 1000
str1 and str2 consist of English uppercase letters.*/

class Solution {
    public String gcdOfStrings(String str1, String str2) {
        int l1=str1.length();
        int l2=str2.length();
        String s="";
        int a=l1;
        int b=l2;
        int k,c;
        while(b>0)
        {
            c=a;
            a=b;
            b=c%b;
        }
        k=a;
        if(str1.concat(str2).equals(str2.concat(str1)))
        {
            s=str1.substring(0,k);
        }
        else
        {
           s="";
        }
        return s;
}
}
